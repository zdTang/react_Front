{"version":3,"sources":["conf.js","components/Card.jsx","components/Search.jsx","components/SaveCard.jsx","components/Favourite.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["WebPageOptions","Card","props","state","display","count","myString","limit","shortened","indexOf","substring","localStorage","setItem","this","post","data","title","url","i","len","length","key","getItem","className","score","truncateString","selftext","href","target","type","value","id","onClick","saveToFavourite","bind","htmlFor","Component","myResult","Search","sessionStorage","JSON","parse","stringify","message","div","document","createElement","appendChild","createTextNode","searchContainer","getElementById","search","insertBefore","setTimeout","querySelector","remove","searchInput","searchTerm","showMessage","GetSubRedditByHot","searchString","fetch","then","res","json","result","children","setState","console","log","placeholder","SearchReddit","map","element","index","SaveCard","removeItem","func","DeleteFavourite","Favourite","loadLocalStorage","postList","push","App","to","path","component","Favorite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3d03b8c5.chunk.js","sourcesContent":["const WebPageOptions={\r\n    timeout: 1000,   // the time to remove the alert\r\n    truncateStringNumber:200\r\n}\r\n\r\n\r\nexport {WebPageOptions}","/*=======================\r\nFileName: Card.jsx\r\nDescription: The component for single Riddit post\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\nimport React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\n\r\nexport default class Card extends Component {\r\n   \r\n   constructor(props){\r\n       super(props)\r\n       this.state={\r\n            display:props.display,\r\n            count:props.count\r\n       }\r\n   }\r\n   \r\n   componentWillUnmount(){\r\n   }\r\n\r\n/*=======================\r\nMethod:truncateString\r\nDescription: to delete some words if it is too long\r\nparameters: \r\n  myString: the target string\r\n  limit: the length we will leave\r\nreturn: new string\r\n========================*/   \r\n\r\n   truncateString(myString, limit) {\r\n    const shortened = myString.indexOf(' ', limit);\r\n    if (shortened == -1) return myString;\r\n    return myString.substring(0, shortened);\r\n  }\r\n\r\n\r\n/*=======================\r\nMethod:saveToFavourite\r\nDescription: to save the current post into favourite\r\nparameters: n/a\r\nreturn: n/a\r\n========================*/   \r\n\r\n  saveToFavourite(){\r\n     localStorage.setItem(this.props.post.data.title, this.props.post.data.url);\r\n\r\n for (var i=0, len =  localStorage.length; i  <  len; i++){   \r\n    var key =  localStorage.key(i);     \r\n    var value =  localStorage.getItem(key);   \r\n    //console.log(i+'====='+  key + \"===========\" + value);\r\n   }\r\n  \r\n\r\n\r\n  }\r\n\r\n//    imageURL(){\r\n//        //<p className=\"card-text\">{this.props.post.selftext}</p>\r\n//        //'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png'\r\n//    // return this.props.post.preview?this.props.post.preview.images[0].source.url:'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png';\r\n//     return 'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png';\r\n// }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" >\r\n           \r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{this.props.post.data.title}<span className=\"badge bg-warning text-dark\">{this.props.post.data.score}</span></h5>\r\n                <p className=\"card-text\">{this.truncateString(this.props.post.data.selftext,WebPageOptions.truncateStringNumber)}</p>\r\n                <a href={this.props.post.data.url} target = '_blank' className=\"btn btn-primary\">Read More</a>\r\n                <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckIndeterminate\" onClick={this.saveToFavourite.bind(this)}/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminate\">\r\n                  Add Favourite\r\n                </label>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/*=======================\r\nFileName: Search.jsx\r\nDescription: The component for displaying the posts\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\nimport React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\nimport Card from './Card'\r\nlet myResult=[];\r\nexport default class Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n           post:sessionStorage.getItem(\"post\")&&JSON.parse(sessionStorage.getItem(\"post\"))\r\n\r\n        }\r\n        //check localstorage\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        sessionStorage.setItem(\"post\", JSON.stringify(this.state.post));\r\n      }\r\n/*=======================\r\nMethod: showMessage\r\nDescription: display alert message once user forget input a term for searching\r\nparameters: n/a\r\nreturn: n/a\r\n========================*/ \r\n\r\n\r\n    showMessage(message,className){\r\n        const div=document.createElement('div');\r\n        div.className=`alert ${className}`;\r\n        div.appendChild(document.createTextNode(message));\r\n        const searchContainer=document.getElementById('search-container');\r\n        const search=document.getElementById('search');\r\n        searchContainer.insertBefore(div,search);\r\n        setTimeout(()=>document.querySelector('.alert').remove(),WebPageOptions.timeout);\r\n\r\n    }\r\n\r\n\r\n/*=======================\r\nMethod: SearchReddit\r\nDescription: search reddit based on Input\r\nparameters: n/a\r\nreturn: the result of searching\r\n========================*/ \r\n\r\n   SearchReddit(){\r\n    const searchInput=document.getElementById('search-input');   \r\n\r\n    // Get search term\r\n    let searchTerm=searchInput.value;\r\n    let searchResult=undefined;\r\n    if (searchTerm==='')\r\n    {\r\n        this.showMessage(`please add a serarch term`,'alert-danger');\r\n    }\r\n    else\r\n    {\r\n      this.GetSubRedditByHot(searchTerm);\r\n        searchInput.value='';\r\n    }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n  GetSubRedditByHot(searchString) {\r\n    //let MyResult=undefined;\r\n    //await r.getSubreddit(searchString).getHot({limit:ApiOption.HotPostNumber}).then(result=>{MyResult=result});\r\n    //await r.getSubreddit(searchString).getHot({limit:ApiOption.HotPostNumber}).then(result=>{MyResult=result});\r\n    //return MyResult;\r\n    //then(res=>res.json())\r\n    fetch(`https://www.reddit.com/r/${searchString}/hot.json?limit=10`).then(res=>res.json()).then(\r\n          (result)=>{\r\n           // console.log(result.data.children);\r\n            if(result.data.children){\r\n              //console.log(result);\r\n              myResult=result.data.children;\r\n             // console.log(myResult);\r\n              \r\n                this.setState({\r\n\r\n                 post:myResult\r\n  \r\n                })\r\n            }\r\n            else{\r\n              console.log('no result')\r\n            }\r\n          }\r\n    )\r\n\r\n  }\r\n  \r\n\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-container\" className=\"container\">\r\n            <div id=\"search\" className=\"card card-body bg-light mb-2\">\r\n            <h4>Search SubReddit</h4>\r\n            <input type=\"text\" id=\"search-input\" className=\"form-control mb-3\" placeholder=\"Search Term...\"/>    \r\n            <button type=\"submit\" className=\"btn btn-dark btn-block mt-4\" onClick={this.SearchReddit.bind(this,\"tang\")}>Search</button>\r\n\r\n            </div>  \r\n            { \r\n                \r\n                 (this.state.post||[]).map((element,index)=> {\r\n                    return <Card key={index} post={element} />\r\n                 })\r\n            }\r\n            <div id='results'></div>\r\n            </div>  \r\n            \r\n        )\r\n    }\r\n}\r\n","/*=======================\r\nFileName: saveCard.jsx\r\nDescription: The component for displaying single favourite posts\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\nimport React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\n\r\nexport default class SaveCard extends Component {\r\n   \r\n   constructor(props){\r\n       super(props)\r\n       this.state={\r\n            display:props.display,\r\n            count:props.count\r\n       }\r\n   }\r\n   \r\n\r\n/*=======================\r\nMethod:DeleteFavourite\r\nDescription: to remove a favourite post from a list\r\nparameters: n/a\r\nreturn: n/a\r\n========================*/   \r\n DeleteFavourite(){\r\n    localStorage.removeItem(this.props.post.title);\r\n    this.props.func();\r\n\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n              <a href={this.props.post.url} target = '_blank' className=\"btn btn-primary\">Read</a>\r\n              <button type=\"button\" className=\"btn btn-outline-danger\" onClick={this.DeleteFavourite.bind(this)}>Remove</button>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","/*=======================\r\nFileName: Favourite.jsx\r\nDescription: The component for displaying all favourite posts\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\nimport React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\nimport SaveCard from './SaveCard'\r\nlet myResult=[];\r\nexport default class Favourite extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            post:''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // get data from localstorage and save to state??\r\n        this.loadLocalStorage();\r\n    }\r\n\r\n/*=======================\r\nMethod:loadLocalStorage\r\nDescription: load post list from localStorage\r\nparameters: n/a\r\nreturn: the List of saved reddit posts\r\n========================*/   \r\n\r\n    loadLocalStorage=()=>{\r\n        let postList=[];\r\n        for (var i=0, len =  localStorage.length; i  <  len; i++){   \r\n            var key =  localStorage.key(i);     \r\n            var value =  localStorage.getItem(key);  \r\n            postList.push({title:key,url:value}); \r\n\r\n           }\r\n\r\n           this.setState({\r\n\r\n           post:postList\r\n \r\n         })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"search-container\" className=\"container\">\r\n            <div id=\"search\" className=\"card card-body bg-light mb-2\">\r\n            <h4>Favourite SubReddit</h4>\r\n            \r\n           \r\n\r\n            </div>  \r\n            { \r\n                \r\n                 (this.state.post||[]).map((element,index)=> {\r\n                    return <SaveCard key={index} post={element} func={this.loadLocalStorage}/>\r\n                 })\r\n            }\r\n            <div id='results'></div>\r\n            </div>  \r\n            \r\n        )\r\n    }\r\n}\r\n","/*=======================\r\nFileName: App.jsx\r\nDescription: The main component of the application\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\n\r\nimport React, { Component } from 'react'\r\nimport { HashRouter, Route, Link } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport Favorite from './Favourite'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n\r\n            <nav className=\"navbar navbar-dark bg-primary mb-3\">\r\n            <div className=\"container\">\r\n              <span className=\"navbar-brand\">Finddit</span>\r\n            </div>        \r\n          </nav>\r\n\r\n  <ul className=\"nav\">\r\n  <li className=\"nav-item\">\r\n    <Link className=\"nav-link active\" to=\"/Search\">Search</Link>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n  <Link className=\"nav-link active\" to=\"/Favorite\"> Favorite </Link>\r\n  </li>\r\n  \r\n</ul>\r\n\r\n          <Route path=\"/Search\" component={Search}></Route>\r\n        \r\n          <Route path=\"/Favorite\" component={Favorite}></Route>\r\n\r\n           \r\n            </HashRouter>\r\n           \r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*=======================\r\nFileName: index.jsx\r\nDescription: The entry point of application\r\nProgrammer: Zhendong Tang\r\nFirst Version: March -1, 2021\r\n========================*/ \r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Cmp1 from './Cmp1';\r\n//import Result from './components/Result';\r\nimport App from './components/App'\r\nimport './index.css';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))  c\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}