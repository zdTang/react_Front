{"version":3,"sources":["config/redditToken.js","RedditApi.js","conf.js","components/Card.jsx","components/Search.jsx","components/SaveCard.jsx","components/Favourite.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["token","ApiOption","r","snoowrap","userAgent","clientId","clientSecret","username","password","GetSubRedditByHot","searchString","a","MyResult","undefined","getSubreddit","getHot","limit","then","result","WebPageOptions","Card","props","state","display","count","console","log","myString","shortened","indexOf","substring","localStorage","setItem","this","post","title","url","i","len","length","key","value","getItem","className","src","preview","images","source","alt","truncateString","selftext","href","target","type","id","onClick","saveToFavourite","bind","htmlFor","Component","Search","sessionStorage","JSON","parse","stringify","message","div","document","createElement","appendChild","createTextNode","searchContainer","getElementById","search","insertBefore","setTimeout","querySelector","remove","searchInput","searchTerm","searchResult","showMessage","setState","placeholder","SearchReddit","map","element","index","SaveCard","removeItem","func","DeleteFavourite","Favourite","loadLocalStorage","postList","push","App","to","path","component","Favorite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b3ebf13a.chunk.js","sourcesContent":[" const token={\r\n\r\nuserAgent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36',\r\nclientId: 'h8PCl1ykdWxcAA',\r\nclientSecret: 'TCmMJItd9icxcePzJ-CgRe-1TXPCUw',\r\nusername: 'mike-tang',\r\npassword: 'Frontend123'\r\n\r\n}\r\n\r\nconst ApiOption={\r\n    HotPostNumber: 9   // the number of posts\r\n\r\n}\r\n\r\n\r\nexport {token,ApiOption}","\r\n  import snoowrap from'snoowrap';\r\n  import {token,ApiOption} from './config/redditToken'\r\n\r\n    const r = new snoowrap({\r\n      userAgent: token.userAgent,\r\n      clientId: token.clientId,\r\n      clientSecret: token.clientSecret,\r\n      username: token.username,\r\n      password: token.password\r\n    });\r\n  \r\n    //r.getHot().map(post => post.title).then(console.log);\r\n   // Automating moderation tasks\r\n  //  async function getSub(){\r\n  //     let result = await r.getSubreddit('some_subreddit_name').getModqueue({limit: 100});\r\n  //     return result; \r\n  // }\r\n  \r\n  async function getData(searchString) {\r\n    let MyResult=undefined;\r\n    //let response = await r.getSubreddit(searchString).getTop({time: 'all'}).then(result=>{MyResult=result});\r\n    await r.getSubreddit(searchString).getTop({time: 'all'}).then(result=>{MyResult=result});\r\n    return MyResult;\r\n  };\r\n  //r.getSubreddit('china').getTop({time: 'all'}).then(console.log)\r\n  \r\n  //let m=await getData()\r\n  //console.log(m);\r\n\r\n \r\n\r\n  async function GetSubRedditByHot(searchString) {\r\n    let MyResult=undefined;\r\n    await r.getSubreddit(searchString).getHot({limit:ApiOption.HotPostNumber}).then(result=>{MyResult=result});;\r\n    return MyResult;\r\n  }\r\n  \r\n  \r\n  export {getData, GetSubRedditByHot};","const WebPageOptions={\r\n    timeout: 1000,   // the time to remove the alert\r\n    truncateStringNumber:200\r\n}\r\n\r\n\r\nexport {WebPageOptions}","import React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\n\r\nexport default class Card extends Component {\r\n   \r\n   constructor(props){\r\n       super(props)\r\n       this.state={\r\n            display:props.display,\r\n            count:props.count\r\n       }\r\n   }\r\n   \r\n   componentWillUnmount(){\r\n     console.log(\"=======will Unmount\");\r\n   }\r\n\r\n\r\n\r\n   truncateString(myString, limit) {\r\n    const shortened = myString.indexOf(' ', limit);\r\n    if (shortened == -1) return myString;\r\n    return myString.substring(0, shortened);\r\n  }\r\n\r\n  saveToFavourite(){\r\n     //console.log(this.props.post.title);\r\n     //console.log(this.props.post.url);\r\n     localStorage.setItem(this.props.post.title, this.props.post.url);\r\n   //  let cat = localStorage.getItem(this.props.post.title);\r\n   //  console.log(cat);\r\n    // console.log(localStorage);\r\n    // console.log(localStorage.length);\r\n console.log(`################################`)\r\n\r\n for (var i=0, len =  localStorage.length; i  <  len; i++){   \r\n    var key =  localStorage.key(i);     \r\n    var value =  localStorage.getItem(key);   \r\n    console.log(i+'====='+  key + \"===========\" + value);\r\n   }\r\n  \r\n\r\n\r\n  }\r\n\r\n   imageURL(){\r\n       //<p className=\"card-text\">{this.props.post.selftext}</p>\r\n       //'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png'\r\n   // return this.props.post.preview?this.props.post.preview.images[0].source.url:'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png';\r\n    return 'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png';\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" >\r\n            <img className=\"card-img-top\" src={this.props.post.preview?this.props.post.preview.images[0].source.url:this.props.post.preview?this.props.post.preview.images[0].source.url:'https://variety.com/wp-content/uploads/2020/06/reddit-logo-1.png'} alt=\"Card image cap\"/>\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n                <p className=\"card-text\">{this.truncateString(this.props.post.selftext,WebPageOptions.truncateStringNumber)}</p>\r\n                <a href={this.props.post.url} target = '_blank' className=\"btn btn-primary\">Read More</a>\r\n                <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckIndeterminate\" onClick={this.saveToFavourite.bind(this)}/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexCheckIndeterminate\">\r\n                  Add Favourite\r\n                </label>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {GetSubRedditByHot} from '../RedditApi'\r\nimport {WebPageOptions} from '../conf'\r\nimport Card from './Card'\r\nlet myResult=[];\r\nexport default class Search extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n           post:sessionStorage.getItem(\"post\")&&JSON.parse(sessionStorage.getItem(\"post\"))\r\n\r\n        }\r\n        //check localstorage\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n        console.log(`will unmount==${this.state.post}`)\r\n        sessionStorage.setItem(\"post\", JSON.stringify(this.state.post));\r\n        console.log(\"Search=======will Unmount\");\r\n      }\r\n   com\r\n\r\n    showMessage(message,className){\r\n        const div=document.createElement('div');\r\n        div.className=`alert ${className}`;\r\n        div.appendChild(document.createTextNode(message));\r\n        const searchContainer=document.getElementById('search-container');\r\n        const search=document.getElementById('search');\r\n        searchContainer.insertBefore(div,search);\r\n        setTimeout(()=>document.querySelector('.alert').remove(),WebPageOptions.timeout);\r\n\r\n    }\r\n\r\n\r\n\r\n   async SearchReddit(){\r\n    const searchInput=document.getElementById('search-input');   \r\n\r\n    // Get search term\r\n    let searchTerm=searchInput.value;\r\n    let searchResult=undefined;\r\n    if (searchTerm==='')\r\n    {\r\n        this.showMessage(`please add a serarch term`,'alert-danger');\r\n    }\r\n    else\r\n    {\r\n        searchResult=await GetSubRedditByHot(searchTerm);\r\n        myResult=searchResult;\r\n        console.log(searchResult);\r\n\r\n        this.setState({\r\n           //result:[1,2,3,4,5,6,7]\r\n           //result:this.state.result.concat(searchResult[0])\r\n           //post:this.state.result.concat(searchResult[0])\r\n          post:searchResult\r\n\r\n        }\r\n        )\r\n        //console.log(Array.isArray(searchResult) )\r\n         console.log(this.state.post);\r\n\r\n\r\n        searchInput.value='';\r\n    }\r\n\r\n  \r\n\r\n}\r\n\r\n\r\n\r\n    render() {\r\n\r\n        console.log(`haha${sessionStorage.getItem(\"post\")}`);\r\n        return (\r\n            <div id=\"search-container\" className=\"container\">\r\n            <div id=\"search\" className=\"card card-body bg-light mb-2\">\r\n            <h4>Search SubReddit</h4>\r\n            <input type=\"text\" id=\"search-input\" className=\"form-control mb-3\" placeholder=\"Search Term...\"/>    \r\n            <button type=\"submit\" className=\"btn btn-dark btn-block mt-4\" onClick={this.SearchReddit.bind(this,\"tang\")}>Search</button>\r\n\r\n            </div>  \r\n            { \r\n                \r\n                 (this.state.post||[]).map((element,index)=> {\r\n                    return <Card key={index} post={element} />\r\n                 })\r\n            }\r\n            <div id='results'></div>\r\n            </div>  \r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\n\r\nexport default class SaveCard extends Component {\r\n   \r\n   constructor(props){\r\n       super(props)\r\n       this.state={\r\n            display:props.display,\r\n            count:props.count\r\n       }\r\n   }\r\n   \r\n\r\n DeleteFavourite(){\r\n\r\n\r\n    localStorage.removeItem(this.props.post.title);\r\n    //console.log(`################################`)\r\n    this.props.func();\r\n\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\" >\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">{this.props.post.title}</h5>\r\n              <a href={this.props.post.url} target = '_blank' className=\"btn btn-primary\">Read</a>\r\n              <button type=\"button\" className=\"btn btn-outline-danger\" onClick={this.DeleteFavourite.bind(this)}>Remove</button>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {WebPageOptions} from '../conf'\r\nimport SaveCard from './SaveCard'\r\nlet myResult=[];\r\nexport default class Favourite extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            post:''\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // get data from localstorage and save to state??\r\n        this.loadLocalStorage();\r\n    }\r\n\r\n    loadLocalStorage=()=>{\r\n        let postList=[];\r\n        for (var i=0, len =  localStorage.length; i  <  len; i++){   \r\n            var key =  localStorage.key(i);     \r\n            var value =  localStorage.getItem(key);  \r\n            postList.push({title:key,url:value}); \r\n            //console.log(i+'====='+  key + \"===========\" + value);\r\n           }\r\n\r\n           this.setState({\r\n\r\n           post:postList\r\n \r\n         })\r\n    }\r\n\r\n    DeleteReddit(){\r\n        console.log(\"haha\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"search-container\" className=\"container\">\r\n            <div id=\"search\" className=\"card card-body bg-light mb-2\">\r\n            <h4>Favourite SubReddit</h4>\r\n            \r\n           \r\n\r\n            </div>  \r\n            { \r\n                \r\n                 (this.state.post||[]).map((element,index)=> {\r\n                    return <SaveCard key={index} post={element} func={this.loadLocalStorage}/>\r\n                 })\r\n            }\r\n            <div id='results'></div>\r\n            </div>  \r\n            \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Route, Link } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport Favorite from './Favourite'\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n\r\n            <nav className=\"navbar navbar-dark bg-primary mb-3\">\r\n            <div className=\"container\">\r\n              <span className=\"navbar-brand\">Finddit</span>\r\n            </div>        \r\n          </nav>\r\n\r\n  <ul className=\"nav\">\r\n  <li className=\"nav-item\">\r\n    <Link className=\"nav-link active\" to=\"/Search\">Search</Link>\r\n  </li>\r\n  <li className=\"nav-item\">\r\n  <Link className=\"nav-link active\" to=\"/Favorite\"> Favorite </Link>\r\n  </li>\r\n  \r\n</ul>\r\n\r\n          <Route path=\"/Search\" component={Search}></Route>\r\n        \r\n          <Route path=\"/Favorite\" component={Favorite}></Route>\r\n\r\n           \r\n            </HashRouter>\r\n           \r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import Cmp1 from './Cmp1';\r\n//import Result from './components/Result';\r\nimport App from './components/App'\r\nimport './index.css';\r\n\r\n//import App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))  c\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}